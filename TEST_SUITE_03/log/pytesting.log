2023-12-29 19:22:11 [   DEBUG] [asyncio] Using proactor: IocpProactor (proactor_events.py:634)
2023-12-29 19:22:15 [   DEBUG] [parse] format 'the basket has "{initial}" cucumbers' -> 'the basket has "(?P<initial>.+?)" cucumbers' (parse.py:436)
2023-12-29 19:22:15 [   DEBUG] [parse] format '"{some}" cucumbers are added to the basket' -> '"(?P<some>.+?)" cucumbers are added to the basket' (parse.py:436)
2023-12-29 19:22:15 [   DEBUG] [parse] format '"{some}" cucumbers are removed from the basket' -> '"(?P<some>.+?)" cucumbers are removed from the basket' (parse.py:436)
2023-12-29 19:22:15 [   DEBUG] [parse] format 'the basket contains "{total}" cucumbers' -> 'the basket contains "(?P<total>.+?)" cucumbers' (parse.py:436)
2023-12-29 19:22:15 [    INFO] [test_03_logging] test_a1 (test_03_logging.py:12)
2023-12-29 19:22:15 [    INFO] [test_03_logging] test_a2 (test_03_logging.py:18)
2023-12-29 19:22:15 [    INFO] [test_03_logging] API call done (test_03_logging.py:28)
2023-12-29 19:22:15 [   ERROR] [test_03_logging] test_case03 xfail (test_03_logging.py:41)
2023-12-29 19:22:15 [   ERROR] [test_03_logging] func1 ValueError (test_03_logging.py:33)
2023-12-29 19:22:18 [   DEBUG] [asyncio] Using proactor: IocpProactor (proactor_events.py:634)
2023-12-29 19:23:14 [   DEBUG] [urllib3.connectionpool] Starting new HTTPS connection (1): httpbin.org:443 (connectionpool.py:1053)
2023-12-29 19:23:14 [   DEBUG] [urllib3.connectionpool] https://httpbin.org:443 "GET /digest-auth/auth/123/123/MD5 HTTP/1.1" 401 0 (connectionpool.py:547)
2023-12-29 19:23:15 [   DEBUG] [urllib3.connectionpool] https://httpbin.org:443 "GET /digest-auth/auth/123/123/MD5 HTTP/1.1" 200 46 (connectionpool.py:547)
2023-12-29 19:23:15 [   DEBUG] [urllib3.connectionpool] Starting new HTTPS connection (1): petstore.swagger.io:443 (connectionpool.py:1053)
2023-12-29 19:23:15 [   DEBUG] [urllib3.connectionpool] https://petstore.swagger.io:443 "PUT /v2/pet/ HTTP/1.1" 200 None (connectionpool.py:547)
2023-12-29 19:23:15 [    INFO] [test_pets] API call done (test_pets.py:27)
2023-12-29 19:23:15 [   DEBUG] [urllib3.connectionpool] Starting new HTTPS connection (1): petstore.swagger.io:443 (connectionpool.py:1053)
2023-12-29 19:23:16 [   DEBUG] [urllib3.connectionpool] https://petstore.swagger.io:443 "GET /v2/pet/200 HTTP/1.1" 200 None (connectionpool.py:547)
2023-12-29 19:23:16 [   DEBUG] [urllib3.connectionpool] Starting new HTTPS connection (1): petstore.swagger.io:443 (connectionpool.py:1053)
2023-12-29 19:23:16 [   DEBUG] [urllib3.connectionpool] https://petstore.swagger.io:443 "PUT /v2/pet/ HTTP/1.1" 200 None (connectionpool.py:547)
2023-12-29 19:23:16 [    INFO] [test_pets] API call done (test_pets.py:46)
2023-12-29 19:23:16 [   DEBUG] [urllib3.connectionpool] Starting new HTTPS connection (1): petstore.swagger.io:443 (connectionpool.py:1053)
2023-12-29 19:23:16 [   DEBUG] [urllib3.connectionpool] https://petstore.swagger.io:443 "DELETE /v2/pet/200 HTTP/1.1" 200 None (connectionpool.py:547)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "0" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"3" cucumbers are added to the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are added to the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "3" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "2" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"4" cucumbers are added to the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are added to the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "6" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "5" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"5" cucumbers are added to the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are added to the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "10" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "8" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"3" cucumbers are removed from the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are removed from the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "5" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "10" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"4" cucumbers are removed from the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are removed from the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "6" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_given_the basket has "7" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_given_the basket has "{initial}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_when_"0" cucumbers are removed from the basket': [<FixtureDef argname='pytestbdd_stepdef_when_"{some}" cucumbers are removed from the basket' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
2023-12-29 19:23:19 [   DEBUG] [pytest_bdd.scenario] Adding providers for fixture 'pytestbdd_stepimpl_then_the basket contains "7" cucumbers': [<FixtureDef argname='pytestbdd_stepdef_then_the basket contains "{total}" cucumbers' scope='function' baseid='tests/40_pytest_bdd/test_cucumbers_steps.py'>] (scenario.py:94)
